var tipuesearch = {"pages":[{"title":" easy ","text":"easy Fortran rationals A package that implements rationals number as a numeric type, useful for lossless computations. Developer Info John Doe","tags":"home","url":"index.html"},{"title":"say_hello – easy","text":"public  subroutine say_hello() Arguments None Source Code subroutine say_hello print * , \"Hello, easy!\" end subroutine say_hello","tags":"","url":"proc/say_hello.html"},{"title":"mysin – easy","text":"public pure elemental function mysin(r) result(answer) Arguments Type Intent Optional Attributes Name real, intent(in) :: r MYSIN(3f) is a trivial function for demonstration purposes. Return Value real Source Code elemental pure function mysin ( r ) result ( answer ) !> MYSIN(3f) is a trivial function for demonstration purposes. !  It calls the intrinsic SIN real , intent ( in ) :: r real :: answer answer = sin ( r ) end function mysin","tags":"","url":"proc/mysin.html"},{"title":"mysqrt – easy","text":"public pure elemental function mysqrt(r) result(answer) Arguments Type Intent Optional Attributes Name real, intent(in) :: r MYSQRT(3f) is a trivial function for demonstration purposes. Return Value real Source Code elemental pure function mysqrt ( r ) result ( answer ) !> MYSQRT(3f) is a trivial function for demonstration purposes. !  It calls the intrinsic SQRT real , intent ( in ) :: r real :: answer answer = sqrt ( r ) end function mysqrt","tags":"","url":"proc/mysqrt.html"},{"title":"easy – easy","text":"Subroutines public  subroutine say_hello () Arguments None","tags":"","url":"module/easy.html"},{"title":"easy__sample – easy","text":"Functions public pure elemental function mysin (r) result(answer) Arguments Type Intent Optional Attributes Name real, intent(in) :: r MYSIN(3f) is a trivial function for demonstration purposes. Return Value real public pure elemental function mysqrt (r) result(answer) Arguments Type Intent Optional Attributes Name real, intent(in) :: r MYSQRT(3f) is a trivial function for demonstration purposes. Return Value real","tags":"","url":"module/easy__sample.html"},{"title":"check – easy","text":"Uses easy__sample Variables Type Attributes Name Initial real, parameter :: PI = atan(1.0)*4.0 Source Code program check use easy__sample , only : mysqrt , mysin implicit none real , parameter :: PI = atan ( 1.0 ) * 4.0 print * , \"Put some tests in here!\" print * , epsilon ( 0.0 ) print * , mysqrt ( 10 0.0 ) print * , PI ! comparing reals print * , mysin ( PI ). eq . 0.0 , mysin ( PI ), 0.0 print * , mysin ( PI / 2.0 ). eq . 1.0 , mysin ( PI / 2.0 ), 1.0 print * , mysin ( PI / 4.0 ) ** 2. eq . 0.5 , mysin ( PI / 4.0 ) ** 2 , 0.5 print * , mysin ( 0.0 ). eq . 0 , mysin ( 0.0 ), 0 end program check","tags":"","url":"program/check.html"},{"title":"main – easy","text":"Source Code program main implicit none print * , \"hello from project easy\" print * , \"my first change\" end program main","tags":"","url":"program/main.html"},{"title":"easy.f90 – easy","text":"Source Code module easy implicit none private public :: say_hello contains subroutine say_hello print * , \"Hello, easy!\" end subroutine say_hello end module easy","tags":"","url":"sourcefile/easy.f90.html"},{"title":"easy__sample.f90 – easy","text":"Source Code module easy__sample implicit none private public :: mysqrt public :: mysin contains elemental pure function mysqrt ( r ) result ( answer ) !> MYSQRT(3f) is a trivial function for demonstration purposes. !  It calls the intrinsic SQRT real , intent ( in ) :: r real :: answer answer = sqrt ( r ) end function mysqrt elemental pure function mysin ( r ) result ( answer ) !> MYSIN(3f) is a trivial function for demonstration purposes. !  It calls the intrinsic SIN real , intent ( in ) :: r real :: answer answer = sin ( r ) end function mysin end module easy__sample","tags":"","url":"sourcefile/easy__sample.f90.html"},{"title":"check.f90 – easy","text":"Source Code program check use easy__sample , only : mysqrt , mysin implicit none real , parameter :: PI = atan ( 1.0 ) * 4.0 print * , \"Put some tests in here!\" print * , epsilon ( 0.0 ) print * , mysqrt ( 10 0.0 ) print * , PI ! comparing reals print * , mysin ( PI ). eq . 0.0 , mysin ( PI ), 0.0 print * , mysin ( PI / 2.0 ). eq . 1.0 , mysin ( PI / 2.0 ), 1.0 print * , mysin ( PI / 4.0 ) ** 2. eq . 0.5 , mysin ( PI / 4.0 ) ** 2 , 0.5 print * , mysin ( 0.0 ). eq . 0 , mysin ( 0.0 ), 0 end program check","tags":"","url":"sourcefile/check.f90.html"},{"title":"main.f90 – easy","text":"Source Code program main implicit none print * , \"hello from project easy\" print * , \"my first change\" end program main","tags":"","url":"sourcefile/main.f90.html"}]}